{"ast":null,"code":"var _jsxFileName = \"/home/omotayo/flask/client/src/components/PostsPage.js\",\n  _s = $RefreshSig$();\n// src/components/PostsPage.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport NewPost from './NewPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Fetch and set posts\n    fetch('/posts').then(response => response.json()).then(data => setPosts(data)).catch(error => console.error('Error fetching posts:', error));\n  }, []);\n  const handleNewPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n  const handleDeletePost = postId => {\n    // Implement logic to delete the post\n    fetch(`/delete_post/${postId}`, {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        // Update posts after deletion\n        setPosts(posts.filter(post => post.id !== postId));\n      } else {\n        console.error('Failed to delete the post:', data.error);\n      }\n    }).catch(error => console.error('Error deleting the post:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date Posted: \", new Date(post.date_posted).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeletePost(post.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NewPost, {\n      onNewPost: handleNewPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsPage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useState","useEffect","NewPost","jsxDEV","_jsxDEV","PostsPage","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","handleNewPost","newPost","handleDeletePost","postId","method","success","filter","post","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","content","Date","date_posted","toLocaleString","onClick","onNewPost","_c","$RefreshReg$"],"sources":["/home/omotayo/flask/client/src/components/PostsPage.js"],"sourcesContent":["// src/components/PostsPage.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport NewPost from './NewPost';\n\nconst PostsPage = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    // Fetch and set posts\n    fetch('/posts')\n      .then(response => response.json())\n      .then(data => setPosts(data))\n      .catch(error => console.error('Error fetching posts:', error));\n  }, []);\n\n  const handleNewPost = (newPost) => {\n    setPosts([...posts, newPost]);\n  };\n\n  const handleDeletePost = (postId) => {\n    // Implement logic to delete the post\n    fetch(`/delete_post/${postId}`, { method: 'POST' })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          // Update posts after deletion\n          setPosts(posts.filter(post => post.id !== postId));\n        } else {\n          console.error('Failed to delete the post:', data.error);\n        }\n      })\n      .catch(error => console.error('Error deleting the post:', error));\n  };\n\n  return (\n    <div>\n      <h1>All Posts</h1>\n      {posts.map(post => (\n        <div key={post.id}>\n          <h3>{post.content}</h3>\n          <p>Date Posted: {new Date(post.date_posted).toLocaleString()}</p>\n          <button onClick={() => handleDeletePost(post.id)}>Delete</button>\n        </div>\n      ))}\n      <NewPost onNewPost={handleNewPost} />\n    </div>\n  );\n};\n\nexport default PostsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}