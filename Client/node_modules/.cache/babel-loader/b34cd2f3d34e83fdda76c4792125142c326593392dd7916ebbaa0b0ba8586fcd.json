{"ast":null,"code":"var _jsxFileName = \"/home/omotayo/flask/client/src/components/PostsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewPost from './NewPost';\nimport style from './PostPage.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]); // State to store posts\n\n  useEffect(() => {\n    // Fetch and set posts\n    fetch('/posts').then(response => response.json()).then(data => setPosts(data)).catch(error => console.error('Error fetching posts:', error));\n  }, []); // Dependency array to ensure only one fetch\n\n  const handleNewPost = newPost => {\n    setPosts([...posts, newPost]); // Add new post to state\n  };\n\n  const handleDeletePost = postId => {\n    // Implement logic to delete the post\n    fetch(`/delete_post/${postId}`, {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        // Update posts after deletion\n        setPosts(posts.filter(post => post.id !== postId));\n      } else {\n        console.error('Failed to delete the post:', data.error);\n      }\n    }).catch(error => console.error('Error deleting the post:', error));\n  };\n\n  //   return (\n  //     <div className={style.postsPage}> {/* Apply CSS class to the main container */}\n  //       <h1>All Posts</h1>\n  //       <div className={style.postList}> {/* Apply CSS class to the post list */}\n  //         {posts.map((post) => (\n  //           <div key={post.id} className={style.post}> {/* Apply CSS class to each post */}\n  //             <h3>{post.content}</h3>\n  //             <p>Date Posted: {new Date(post.date_posted).toLocaleString()}</p>\n  //             <button\n  //               className={style.deleteButton}\n  //               onClick={() => handleDeletePost(post.id)}\n  //             >\n  //               Delete\n  //             </button>\n  //           </div>\n  //         ))}\n  //       </div>\n  //       <NewPost onNewPost={handleNewPost} />\n  //     </div>\n  //   );\n  // };\n\n  // export default PostsPage;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.postsPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.post,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date Posted: \", new Date(post.date_posted).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeletePost(post.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NewPost, {\n      onNewPost: handleNewPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsPage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useEffect","useState","NewPost","style","jsxDEV","_jsxDEV","PostsPage","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","handleNewPost","newPost","handleDeletePost","postId","method","success","filter","post","id","postsPage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","content","Date","date_posted","toLocaleString","onClick","onNewPost","_c","$RefreshReg$"],"sources":["/home/omotayo/flask/client/src/components/PostsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NewPost from './NewPost';\nimport style from './PostPage.css'; // Import the CSS file\n\nconst PostsPage = () => {\n  const [posts, setPosts] = useState([]); // State to store posts\n\n  useEffect(() => {\n    // Fetch and set posts\n    fetch('/posts')\n      .then((response) => response.json())\n      .then((data) => setPosts(data))\n      .catch((error) => console.error('Error fetching posts:', error));\n  }, []); // Dependency array to ensure only one fetch\n\n  const handleNewPost = (newPost) => {\n    setPosts([...posts, newPost]); // Add new post to state\n  };\n\n  const handleDeletePost = (postId) => {\n    // Implement logic to delete the post\n    fetch(`/delete_post/${postId}`, { method: 'POST' })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          // Update posts after deletion\n          setPosts(posts.filter((post) => post.id !== postId));\n        } else {\n          console.error('Failed to delete the post:', data.error);\n        }\n      })\n      .catch((error) => console.error('Error deleting the post:', error));\n  };\n\n//   return (\n//     <div className={style.postsPage}> {/* Apply CSS class to the main container */}\n//       <h1>All Posts</h1>\n//       <div className={style.postList}> {/* Apply CSS class to the post list */}\n//         {posts.map((post) => (\n//           <div key={post.id} className={style.post}> {/* Apply CSS class to each post */}\n//             <h3>{post.content}</h3>\n//             <p>Date Posted: {new Date(post.date_posted).toLocaleString()}</p>\n//             <button\n//               className={style.deleteButton}\n//               onClick={() => handleDeletePost(post.id)}\n//             >\n//               Delete\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//       <NewPost onNewPost={handleNewPost} />\n//     </div>\n//   );\n// };\n\n// export default PostsPage;\n\n  return (\n    <div style={style.postsPage}>\n      <h1>All Posts</h1>\n      {posts.map(post => (\n        <div key={post.id} style={style.post}>\n          <h3>{post.content}</h3>\n          <p>Date Posted: {new Date(post.date_posted).toLocaleString()}</p>\n          <button onClick={() => handleDeletePost(post.id)}>Delete</button>\n        </div>\n      ))}\n      <NewPost onNewPost={handleNewPost} />\n    </div>\n  );\n  };\n\n  export default PostsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,QAAQ,CAAC,CACZC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAME,aAAa,GAAIC,OAAO,IAAK;IACjCV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEW,OAAO,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;;EAED,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnC;IACAX,KAAK,CAAE,gBAAeW,MAAO,EAAC,EAAE;MAAEC,MAAM,EAAE;IAAO,CAAC,CAAC,CAChDX,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACS,OAAO,EAAE;QAChB;QACAd,QAAQ,CAACD,KAAK,CAACgB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC,CAAC;MACtD,CAAC,MAAM;QACLJ,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEF,IAAI,CAACE,KAAK,CAAC;MACzD;IACF,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEE,oBACEX,OAAA;IAAKF,KAAK,EAAEA,KAAK,CAACwB,SAAU;IAAAC,QAAA,gBAC1BvB,OAAA;MAAAuB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBxB,KAAK,CAACyB,GAAG,CAACR,IAAI,iBACbpB,OAAA;MAAmBF,KAAK,EAAEA,KAAK,CAACsB,IAAK;MAAAG,QAAA,gBACnCvB,OAAA;QAAAuB,QAAA,EAAKH,IAAI,CAACS;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvB3B,OAAA;QAAAuB,QAAA,GAAG,eAAa,EAAC,IAAIO,IAAI,CAACV,IAAI,CAACW,WAAW,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjE3B,OAAA;QAAQiC,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACK,IAAI,CAACC,EAAE,CAAE;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHzDP,IAAI,CAACC,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACN,CAAC,eACF3B,OAAA,CAACH,OAAO;MAACqC,SAAS,EAAErB;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAER,CAAC;AAACzB,EAAA,CAnEED,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAqEb,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}