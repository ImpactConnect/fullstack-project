{"ast":null,"code":"var _jsxFileName = \"/home/omotayo/Phase-4-Project/client/src/components/NewPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './NewPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = ({\n  onNewPost\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const handleCreatePost = async () => {\n    try {\n      const response = await fetch('/create_post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content\n        })\n      });\n      if (response.ok) {\n        // Refresh the posts after creating a new one\n        const newPost = await response.json();\n        onNewPost(newPost);\n        setContent('');\n      } else {\n        console.error('Failed to create a new post');\n      }\n    } catch (error) {\n      console.error('Error creating a new post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-post-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter your new post here\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreatePost,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewPost","onNewPost","_s","content","setContent","handleCreatePost","response","fetch","method","headers","body","JSON","stringify","ok","newPost","json","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/omotayo/Phase-4-Project/client/src/components/NewPost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './NewPost.css';\n\nconst NewPost = ({ onNewPost }) => {\n  const [content, setContent] = useState('');\n\n  const handleCreatePost = async () => {\n    try {\n      const response = await fetch('/create_post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ content }),\n      });\n\n      if (response.ok) {\n        // Refresh the posts after creating a new one\n        const newPost = await response.json();\n        onNewPost(newPost);\n        setContent('');\n      } else {\n        console.error('Failed to create a new post');\n      }\n    } catch (error) {\n      console.error('Error creating a new post:', error);\n    }\n  };\n\n  return (\n    <div className=\"new-post-form\">\n      <h2>Create New Post</h2>\n      <textarea\n        placeholder=\"Enter your new post here\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n      />\n      <button onClick={handleCreatePost}>Create Post</button>\n    </div>\n  );\n};\n\nexport default NewPost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET;QAAQ,CAAC;MAClC,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;QACf;QACA,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACrCd,SAAS,CAACa,OAAO,CAAC;QAClBV,UAAU,CAAC,EAAE,CAAC;MAChB,CAAC,MAAM;QACLY,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BpB,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxB,OAAA;MACEyB,WAAW,EAAC,0BAA0B;MACtCC,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFxB,OAAA;MAAQ8B,OAAO,EAAExB,gBAAiB;MAAAc,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACrB,EAAA,CArCIF,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}